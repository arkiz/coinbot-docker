<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f8f9fa; }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .header { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .header h1 { color: #333; margin-bottom: 10px; }
        .user-info { color: #666; margin-bottom: 15px; }
        .logout-btn { background: #dc3545; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; float: right; }
        .logout-btn:hover { background: #c82333; }
        .card { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .alert { padding: 12px; border-radius: 4px; margin-bottom: 20px; }
        .alert.success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert.error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 20px; }
        .stat-card { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; text-align: center; }
        .stat-number { font-size: 2em; font-weight: bold; margin-bottom: 5px; }
        .stat-label { font-size: 0.9em; opacity: 0.9; }
        .menu-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; }
        .menu-item { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); text-align: center; }
        .menu-item a { color: #007bff; text-decoration: none; font-weight: 500; }
        .menu-item a:hover { text-decoration: underline; }
        .menu-icon { font-size: 3em; margin-bottom: 15px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <button class="logout-btn" onclick="document.getElementById('logout-form').submit()">로그아웃</button>
            <form id="logout-form" action="/auth/logout" method="POST" style="display: none;"></form>
            
            <h1><%= title %></h1>
            <div class="user-info">환영합니다, <%= user.username %>님 (관리자)</div>
        </div>

        <% if (success && success.length > 0) { %>
            <div class="alert success"><%= success[0] %></div>
        <% } %>
        <% if (error && error.length > 0) { %>
            <div class="alert error"><%= error[0] %></div>
        <% } %>

        <div class="stats">
            <div class="stat-card">
                <div class="stat-number"><%= stats.totalUsers %></div>
                <div class="stat-label">총 사용자</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.activeUsers %></div>
                <div class="stat-label">활성 사용자</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">5</div>
                <div class="stat-label">모니터링 코인</div>
            </div>
        </div>

        <div class="card">
            <h2>관리 메뉴</h2>
            <div class="menu-grid">
                <div class="menu-item">
                    <div class="menu-icon">💰</div>
                    <h3><a href="/admin/coins">코인 관리</a></h3>
                    <p>거래 코인 추가, 수정, 삭제 및 변경 이력 관리</p>
                </div>
                <div class="menu-item">
                    <div class="menu-icon">👥</div>
                    <h3><a href="/admin/users">사용자 관리</a></h3>
                    <p>사용자 등록, 권한 관리, 상태 변경</p>
                </div>
                <div class="menu-item">
                    <div class="menu-icon">🏦</div>
                    <h3><a href="/admin/exchanges">거래소 관리</a></h3>
                    <p>거래소 등록, 관리, 상태 변경</p>
                </div>
                <div class="menu-item">
                    <div class="menu-icon">📊</div>
                    <h3><a href="/api/monitoring/status">전역 김프 모니터링</a></h3>
                    <p>전체 시스템 김프 상태 확인</p>
                </div>
                <div class="menu-item">
                    <div class="menu-icon">⚙️</div>
                    <h3><a href="#" onclick="alert('구현 예정')">시스템 설정</a></h3>
                    <p>전역 봇 설정 및 시스템 관리</p>
                </div>
                <div class="menu-item">
                    <div class="menu-icon">📈</div>
                    <h3><a href="#" onclick="alert('구현 예정')">거래 통계</a></h3>
                    <p>전체 사용자 거래 현황 및 수익 분석</p>
                </div>

            </div>
        </div>
    </div>
</body>
<script>
    // ✅ 금액 포맷팅 함수 (천원 단위 표기)
    function formatCurrency(amount) {
        if (amount === null || amount === undefined) return '₩0';
        const num = parseFloat(amount);
        if (isNaN(num)) return '₩0';
        
        const formatted = num.toLocaleString('ko-KR');
        let unit = '';
        
        if (num >= 100000000) {
            unit = ` (${Math.floor(num / 100000000)}억${(num % 100000000) >= 10000000 ? ' ' + Math.floor((num % 100000000) / 10000000) + '천만' : ''}원)`;
        } else if (num >= 10000000) {
            unit = ` (${Math.floor(num / 10000000)}천만원)`;
        } else if (num >= 1000000) {
            unit = ` (${Math.floor(num / 1000000)}백만원)`;
        } else if (num >= 10000) {
            unit = ` (${Math.floor(num / 10000)}만원)`;
        } else if (num >= 1000) {
            unit = ` (${Math.floor(num / 1000)}천원)`;
        }
        
        return `₩${formatted}${unit}`;
    }

    // ✅ 숫자 포맷팅 함수 추가 (누락된 함수)
    function formatNumber(value, decimalPlaces) {
        if (value === null || value === undefined) return '-';
        const num = parseFloat(value);
        if (isNaN(num)) return '-';
        return num.toFixed(decimalPlaces);
    }
</script>
</html>
